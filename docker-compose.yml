version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: rhds-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-rhds_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-rhds_password}
      POSTGRES_DB: ${POSTGRES_DB:-rhds_monorepo}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-rhds_user} -d ${POSTGRES_DB:-rhds_monorepo}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - rhds-network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: rhds-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rhds-network
    profiles:
      - admin

volumes:
  postgres_data:

networks:
  rhds-network:
    driver: bridge